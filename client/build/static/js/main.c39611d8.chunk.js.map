{"version":3,"sources":["components/firebase/context.js","components/firebase/firebase.js","components/firebase/index.js","components/input/CardSearchbar.js","components/input/CategoryButtons.js","components/input/SortButtons.js","components/input/TypeButtons.js","services/hints.js","components/forms/HintSubmissionForm.js","components/forms/ReportForm.js","components/HintCard.js","components/pages/Home.js","components/forms/LoginForm.js","components/pages/Login.js","components/forms/SignupForm.js","components/pages/SignUp.js","components/NavigationBar.js","App.js","MuiTheme.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","app","initializeApp","this","useStyles","makeStyles","theme","searchbar","margin","padding","minWidth","textArea","CardSearchbar","inputValue","onInputChange","onChange","value","classes","ioniaCards","cards","filter","card","region","demaciaCards","shadowIslesCards","noxusCards","piltoverAndZaunCards","freljordCards","cardOptions","concat","map","name","cardCode","leveledUp","supertype","collectible","Autocomplete","className","options","getOptionLabel","groupBy","renderInput","params","TextField","label","variant","noOptionsText","buttonGroup","marginBottom","CategoryButtons","category","handleCategoryChange","ToggleButtonGroup","exclusive","size","ToggleButton","Typography","SortButtons","sort","handleSortChange","disabled","TypeButtons","type","handleTypeChange","token","updateToken","a","currentUser","getIdToken","console","log","error","get","args","axios","then","response","data","hints","getVotes","userId","request","ownerId","add","newHint","post","headers","Authorization","successful","catch","update","hintId","vote","newUrl","baseUrl","put","report","reason","content","root","formItem","marginTop","maxWidth","submitButton","width","cardImage","height","HintSubmissionForm","handleCloseSubmission","useState","search","setSearch","selectedCard","setSelectedCard","setContent","formError","setFormError","showForm","setShowForm","invalidForm","errorMessage","message","Grid","container","direction","event","newSearch","newSelectedCard","id","placeholder","helperText","fullWidth","InputLabelProps","shrink","multiline","rows","preventDefault","target","Fab","color","onClick","hintService","cardId","setTimeout","align","ReportForm","hint","gridItem","textAlign","overflowWrap","paper","submissionModal","submissionModalPaper","HintCard","funny","helpful","votedOn","setVotedOn","setUserAuth","openSubmission","setOpenSubmission","useEffect","onAuthStateChanged","user","uid","votes","Modal","open","onClose","onEscapeKeyDown","onBackdropClick","Paper","justify","item","style","src","alt","sm","marginLeft","marginRight","position","alignItems","bottom","left","ownerName","borderTop","display","IconButton","find","arr","splice","indexOf","flexGrow","maxHeight","setHints","setCategory","setSort","setType","searchItem","setSearchItem","initialHints","changedFilter","filterParam","filterParamArg","filterParams","cardName","sortCat","sortBy","Container","component","spacing","input","newSearchItem","Button","newCategory","newSort","newType","key","withRouter","history","setEmail","setPassword","autoFocus","push","grid","LoginPage","elevation","alignContent","username","setUsername","confirmPassword","setConfirmPassword","authUser","updateProfile","displayName","SignupPage","HomeLink","forwardRef","ref","innerRef","LoginLink","SignupLink","background","title","captionText","buttons","right","top","userAuth","to","exact","path","render","Login","MuiTheme","createMuiTheme","palette","typography","fontFamily","join","h1","fontSize","textDecoration","textColor","body2","ReactDOM","ThemeProvider","Provider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.c39611d8.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyABccszQPRBBbUulYjrKR76wr3G6xawf8Y\",\n    authDomain: \"hawkshot-e7e56.firebaseapp.com\",\n    databaseURL: \"https://hawkshot-e7e56.firebaseio.com\",\n    projectId: \"hawkshot-e7e56\",\n    storageBucket: \"hawkshot-e7e56.appspot.com\",\n    messagingSenderId: \"1007231773971\",\n    appId: \"1:1007231773971:web:006a7e6bc52ecce70e7ee6\",\n    measurementId: \"G-S1G64C987D\"\n  };\n\nclass Firebase {\n\n  constructor(){\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n  }\n\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = (email, password) =>\n    this.auth.signOut();\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\nexport { FirebaseContext, withFirebase };\n","import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport TextField from '@material-ui/core/TextField'\n\nimport cards from '../../assets/data_dragon/en_us/data/set1-en_us'\n\nconst useStyles = makeStyles(theme => ({\n   searchbar: {\n      margin: '0',\n      padding: '0',\n      minWidth: '100%'\n   },\n   textArea: {\n      margin: '0',\n      padding: '0',\n      minWidth: '100%'\n   }\n}))\n\nconst CardSearchbar = ({\n   inputValue,\n   onInputChange,\n   value,\n   onChange\n}) => {\n   const classes = useStyles()\n\n   const ioniaCards = cards.filter(card => card.region === 'Ionia')\n   const demaciaCards = cards.filter(card => card.region === 'Demacia')\n   const shadowIslesCards = cards.filter(card => card.region === 'Shadow Isles')\n   const noxusCards = cards.filter(card => card.region === 'Noxus')\n   const piltoverAndZaunCards = cards.filter(card => card.region === 'Piltover & Zaun')\n   const freljordCards = cards.filter(card => card.region === 'Freljord')\n   const allCardsByRegion = \n      ioniaCards\n         .concat(demaciaCards).concat(shadowIslesCards)\n         .concat(noxusCards).concat(freljordCards)\n         .concat(piltoverAndZaunCards)\n\n   const cardOptions = allCardsByRegion.map(card => {\n      return {\n         name: card.name, \n         region: card.region,\n         cardCode: card.cardCode,\n         leveledUp: card.supertype === 'Champion' && card.collectible === false\n      }\n   })\n\n   return (\n      <Autocomplete\n         className = {classes.searchbar}\n         options = {cardOptions}\n         getOptionLabel = {card => card.leveledUp ? card.name + ' [Levelled Up]' : card.name}\n         groupBy = {card => card.region}\n         renderInput = {params => (\n            <TextField {...params} className = {classes.textArea} label = 'Search for a Card' variant = 'outlined'/>\n         )}\n         noOptionsText = \"We couldn't find what you were looking for\"\n         inputValue = {inputValue}\n         onInputChange = {onInputChange}\n         onChange = {onChange}\n      />\n   )\n}\n\nexport default CardSearchbar","import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Typography from '@material-ui/core/Typography'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\n\nconst useStyles = makeStyles(theme => ({\n   buttonGroup: {\n      margin: '0 1.5em',\n      marginBottom: '1em'\n   }\n}))\n\nconst CategoryButtons = ({\n   category,\n   handleCategoryChange\n}) => {\n   const classes = useStyles()\n\n   return (\n      <ToggleButtonGroup className = {classes.buttonGroup} exclusive value = {category} onChange = {handleCategoryChange} size = 'large'>\n         <ToggleButton value = 'all'>\n            <Typography variant = 'button'>All</Typography>\n         </ToggleButton>\n         <ToggleButton value = 'funny'>\n            <Typography variant = 'button'>Funny</Typography>\n         </ToggleButton>\n         <ToggleButton value = 'helpful'>\n            <Typography variant = 'button'>Helpful</Typography>\n         </ToggleButton>\n      </ToggleButtonGroup>\n   )\n}\n\nexport default CategoryButtons\n","import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Typography from '@material-ui/core/Typography'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\n\nconst useStyles = makeStyles(theme => ({\n   buttonGroup: {\n      margin: '0 1.5em',\n      marginBottom: '1em'\n   }\n}))\n\nconst SortButtons = ({\n   sort,\n   handleSortChange\n}) => {\n   const classes = useStyles()\n\n   return (\n      <ToggleButtonGroup className = {classes.buttonGroup} exclusive value = {sort} onChange = {handleSortChange} size = 'large'>\n         <ToggleButton value = 'popular'>\n            <Typography variant = 'button'>Popular</Typography>\n         </ToggleButton>\n         <ToggleButton value = 'recent'>\n            <Typography variant = 'button'>Recent</Typography>\n         </ToggleButton>\n         <ToggleButton value = 'trending' disabled>\n            <Typography variant = 'button'>Trending</Typography>\n         </ToggleButton>\n      </ToggleButtonGroup>\n   )\n}\n\nexport default SortButtons\n","import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Typography from '@material-ui/core/Typography'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\n\nconst useStyles = makeStyles(theme => ({\n   buttonGroup: {\n      margin: '0 1.5em',\n      marginBottom: '1em'\n   }\n}))\n\nconst TypeButtons = ({\n   type,\n   handleTypeChange\n}) => {\n   const classes = useStyles()\n\n   return (\n      <ToggleButtonGroup className = {classes.buttonGroup} exclusive value = {type} onChange = {handleTypeChange} size = 'large'>\n         <ToggleButton value = 'hint'>\n            <Typography variant = 'button'>Hint</Typography>\n         </ToggleButton>\n         <ToggleButton value = 'card' disabled>\n            <Typography variant = 'button'>Card</Typography>\n         </ToggleButton>\n      </ToggleButtonGroup>\n   )\n}\n\nexport default TypeButtons\n","import axios from 'axios'\n\nconst baseUrl = '/api/hints'\n// const baseUrl = 'http://localhost:5000/api/hints'\n\nlet token = null;\n\nconst updateToken = async firebase => {\n  const currentUser = firebase.auth.currentUser;\n  if (currentUser) {\n    token = await currentUser.getIdToken();\n    console.log('User is authenticated')\n    console.log(token);\n    return token;\n  } else {\n    console.error(\"User could not be authenticated\");\n  }\n}\n\nconst get = args => {\n   const request = axios.get(baseUrl, {params: args})\n   return request.then(response => response.data.hints)\n}\n\nconst getVotes = async (userId) => {\n  const request = axios.get('/api/votes', {params: {ownerId: userId}})\n  return request.then(response => response.data)\n}\n\nconst add = async newHint => {\n  const response = axios.post(baseUrl, newHint, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \" + token\n      }}\n    ).then(response => {\n      console.log(\"success: \", response.data);\n      return {\n        successful: true,\n        response: response.data\n      }\n    }).catch(error => {\n      console.error(\"error: \", error);\n      return {\n        successful: false,\n        response: error\n      }\n    });\n}\n\nconst update = async (hintId, vote) => {\n   const newUrl = baseUrl + '/' +  hintId;\n   //vote is either 'funny', 'notfunny', 'helpful', 'nothelpful'\n\n   const response = axios.put(newUrl, {},\n     {\n       params: {type: vote},\n       headers: {\n         'Content-Type': 'application/json',\n         Authorization: \"Bearer \" + token\n       }\n     }\n   ).then(response => {\n     console.log(\"update hint\", response.data);\n     return {\n       successful: true,\n       response: response.data\n     }\n   }).catch(error =>{\n      console.error(error);\n      return {\n        successful: false,\n        response: error\n      }\n   });\n}\n\nconst report = async (reason, hintId) => {\n  const newUrl = '/api/report/' + hintId;\n  const response = axios.post(newUrl, {\n      content: reason,\n      hintId: hintId,\n  }, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \" + token\n      }\n    }\n  ).then(response => {\n    console.log(\"Reported Hint\", response.data);\n    return {\n      successful: true,\n      response: response.data\n    }\n  }).catch(error =>{\n      console.error(error);\n      return {\n        successful: false,\n        response: error\n      }\n  });\n}\n\nexport default {\n   get,\n   getVotes,\n   add,\n   update,\n   report,\n   updateToken,\n}\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../firebase';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Fab from '@material-ui/core/Fab'\n\nimport CardSearchbar from '../input/CardSearchbar'\n\nimport hintService from '../../services/hints'\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n   },\n   formItem: {\n      margin: '1.2em auto',\n      marginTop: '2.5em',\n      maxWidth: '90%'\n   },\n   submitButton: {\n      margin: '1.2em auto',\n      width: '20%'\n   },\n   searchbar: {\n      margin: 'auto'\n   },\n   cardImage: {\n      height: '20%'\n   }\n}))\n\nconst HintSubmissionForm = ({handleCloseSubmission}) => {\n   const [search, setSearch] = useState('')\n   const [selectedCard, setSelectedCard] = useState(null)\n   const [content, setContent] = useState('')\n   const [formError, setFormError] = useState(null)\n   const [showForm, setShowForm] = useState(true)\n   const classes = useStyles()\n\n   const handleSearchbarChange = (event, newSearch) => setSearch(newSearch)\n   const handleSelectedCardChange = (event, newSelectedCard) => setSelectedCard(newSelectedCard)\n\n   const onContentChange = event => {\n      event.preventDefault()\n      setContent(event.target.value)\n   }\n\n   const onFormSubmit = event => {\n      event.preventDefault()\n      hintService\n         .add({\n            content: content,\n            cardId: selectedCard.cardCode\n         })\n         .then(response => {\n            setSearch('')\n            setSelectedCard(null)\n            setContent('')\n            setFormError(null)\n            setShowForm(false)\n            setTimeout(() => handleCloseSubmission(), 1500)\n         })\n         .catch(error => {\n            console.error(error)\n            setFormError(error)\n         })\n   };\n\n   const invalidForm = !selectedCard || !content  \n   const errorMessage = formError ? formError.message : ''\n\n   return (\n      showForm ? \n\n      <Grid container direction = 'column'>\n         <CardSearchbar\n            className = {classes.searchbar}\n            inputValue = {search}\n            onInputChange = {handleSearchbarChange}\n            value = {selectedCard}\n            onChange = {handleSelectedCardChange}\n         />\n         <TextField\n            id = \"outlined-full-width\"\n            label = \"Tell us your hint!\"\n            placeholder = \"\"\n            helperText=\"\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n               shrink: true,\n            }}\n            multiline\n            rows = {5}\n            variant = 'fill'\n            error = {formError}\n            helperText = {!errorMessage ? 'Please be respectful! Keep in mind we automatically censor obscene language.' : errorMessage}\n            className = {classes.formItem}\n            variant=\"outlined\"\n            type = 'password'\n            value = {content}\n            onChange = {onContentChange}\n         />\n         <Fab \n            type = 'submit' \n            variant = 'extended'\n            color = 'primary' \n            className = {classes.submitButton}\n            disabled = {invalidForm}\n            onClick = {onFormSubmit}\n         >\n            <Typography variant = 'button'>Submit Hint</Typography>\n         </Fab>\n      </Grid>\n\n      :\n\n      <Typography variant = 'h5' align = 'center'>\n         Successfully submitted hint!\n      </Typography>\n   )\n}\n\nexport default HintSubmissionForm","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../firebase';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Fab from '@material-ui/core/Fab'\n\nimport hintService from '../../services/hints'\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n   },\n   formItem: {\n      margin: '1.2em auto',\n      marginTop: '2.5em',\n      maxWidth: '90%'\n   },\n   submitButton: {\n      margin: '1.2em auto',\n      width: '20%'\n   }\n}))\n\nconst ReportForm = ({handleCloseSubmission, hint}) => {\n   const [content, setContent] = useState('')\n   const [formError, setFormError] = useState(null)\n   const [showForm, setShowForm] = useState(true)\n   const classes = useStyles()\n\n   const onContentChange = event => {\n      event.preventDefault()\n      setContent(event.target.value)\n   }\n\n   const onFormSubmit = event => {\n      event.preventDefault()\n      hintService\n         .report(content, hint.id)\n         .then(response => {\n            setContent('')\n            setFormError(null)\n            setShowForm(false)\n            setTimeout(() => handleCloseSubmission(), 1500)\n         })\n         .catch(error => {\n            console.error(error)\n            setFormError(error)\n         })\n   };\n\n   const invalidForm = !content\n   const errorMessage = formError ? formError.message : ''\n\n   return (\n      showForm ?\n\n      <Grid container direction = 'column'>\n         <TextField\n            id = \"outlined-full-width\"\n            label = \"Tell us the reason for this report\"\n            placeholder = \"\"\n            helperText=\"\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n               shrink: true,\n            }}\n            multiline\n            rows = {5}\n            variant = 'fill'\n            error = {formError}\n            helperText = {!errorMessage ? 'Safety is important to us! We will try our best to filter hints reported with enough valid reasons' : errorMessage}\n            className = {classes.formItem}\n            variant=\"outlined\"\n            type = 'text'\n            value = {content}\n            onChange = {onContentChange}\n         />\n         <Fab\n            type = 'submit'\n            variant = 'extended'\n            color = 'primary'\n            className = {classes.submitButton}\n            disabled = {invalidForm}\n            onClick = {onFormSubmit}\n         >\n            <Typography variant = 'button'>Submit Report</Typography>\n         </Fab>\n      </Grid>\n\n      :\n\n      <Typography variant = 'h5' align = 'center'>\n         Successfully submitted report!\n      </Typography>\n   )\n}\n\nexport default ReportForm\n","import React, {useEffect, useState} from 'react'\nimport {withFirebase} from './firebase'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined'\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\nimport Modal from '@material-ui/core/Modal'\n\nimport ReportForm from './forms/ReportForm'\n\nimport hintService from '../services/hints'\n\nconst useStyles = makeStyles(theme => ({\n   gridItem: {\n      margin: '0.5em 0.5em',\n      textAlign: 'center',\n      overflowWrap: 'hyphens'\n   },\n   paper: {\n      height: '250px',\n      width: '460px'\n   },\n   cardImage: {\n      height: '250px'\n   },   \n   submissionModal: {\n      height: '85%',\n      width: '85%',\n      margin: 'auto',\n   },\n   submissionModalPaper: {\n      padding: '3em'\n   },\n}))\n\nconst HintCard = withFirebase(({hint, firebase}) => {\n   const [votedOn, setVotedOn] = useState({funny: [], helpful: [], report: []})\n   const [userAuth, setUserAuth] = useState(null)\n   const [openSubmission, setOpenSubmission] = useState(false)\n   const classes = useStyles()\n\n   useEffect(() => {\n      firebase.auth.onAuthStateChanged(user => {\n         user ? setUserAuth(user) : setUserAuth(null)\n\n         hintService\n            .getVotes(firebase.auth ? firebase.auth.currentUser.uid : null)\n            .then(votes => setVotedOn(votes ? votes : {funny: [], helpful: [], report: []}))\n      })   \n   }, [])\n\n   const handleOpenSubmission = () => setOpenSubmission(true)\n   const handleCloseSubmission = () => setOpenSubmission(false)\n\n   const handleFunnyClick = event => {\n      event.preventDefault()\n      if (votedOn.funny.find(id => id === hint.id)) {\n         hintService\n            .update(hint.id, 'notfunny')\n            .then(() => {\n               hint.funny -= 1\n               let arr = votedOn.funny\n               votedOn.funny.splice(votedOn.funny.indexOf(hint.id))\n               setVotedOn({...votedOn, funny: arr})\n            })\n      } else {\n         hintService\n            .update(hint.id, 'funny')\n            .then(() => {\n               hint.funny += 1\n               const arr = votedOn.funny.concat(hint.id)\n               setVotedOn({...votedOn, funny: arr})\n            })\n      }\n   }\n\n   const handleHelpfulClick = event => {\n      event.preventDefault()\n      if (votedOn.helpful.find(id => id === hint.id)) {\n         hintService\n            .update(hint.id, 'nothelpful')\n            .then(() => {\n               hint.helpful -= 1\n               let arr = votedOn.funny\n               votedOn.helpful.splice(votedOn.helpful.indexOf(hint.id))\n               setVotedOn({...votedOn, helpful: arr})\n            })\n      } else {\n         hintService\n            .update(hint.id, 'helpful')\n            .then(() => {\n               hint.helpful += 1\n               const arr = votedOn.helpful.concat(hint.id)\n               setVotedOn({...votedOn, helpful: arr})\n            })\n      }\n   }\n\n   const handleReportClick = event => {\n      event.preventDefault()\n      if (!votedOn.report.find(id => id === hint.id)) {\n         hintService\n            .report(hint.id)\n            .then(() => {\n               const arr = votedOn.report.concat(hint.id)\n               setVotedOn({...votedOn, report: arr})\n            })\n      } \n   }\n\n   return (\n      <>\n         <Modal\n            open = {openSubmission}\n            onClose = {handleCloseSubmission}\n            onEscapeKeyDown = {handleCloseSubmission}\n            onBackdropClick = {handleCloseSubmission}\n            className = {classes.submissionModal}\n         >\n            <Paper className = {classes.submissionModalPaper}>\n               <ReportForm hint = {hint} handleCloseSubmission = {handleCloseSubmission}/>\n            </Paper>\n         </Modal>\n         <Paper className = {classes.paper}>\n            <Grid container justify = 'flex-start'>\n               <Grid item className = {classes.gridItem} style = {{marginTop: '0'}}>\n                     <img \n                        src = {`https://lor.mln.cx/Set1/en_us/img/cards/${hint.cardId}.png`}\n                        alt = 'cannot load'\n                        className = {classes.cardImage}\n                     />\n               </Grid>\n               <Grid item sm = {7} className = {classes.gridItem} style = {{marginLeft: '0', marginRight: '0', position: 'relative'}}>\n                  <Grid container direction = 'column' justify = 'space-between' alignItems = 'flex-start'>\n                     <Grid item className = {classes.gridItem} style = {{textAlign: 'left', margin: '0'}}>\n                        <Typography variant = 'body1' style = {{width: '265px', overflowWrap: 'break-word'}}>\n                           {hint.content}\n                        </Typography>\n                     </Grid>\n                     <Grid item className = {classes.gridItem} style = {{position: 'absolute', bottom: '52px', left: '-2px'}}>\n                        <Typography variant = 'body2'> - {hint.ownerName}</Typography>\n                     </Grid>\n                     <Grid item className = {classes.gridItem} style = {{position: 'absolute', bottom: '0px', left: '-5px', marginRight: '0', borderTop: '1px black solid', width: '262px'}}>\n                        <div style = {{display: 'inline', marginRight: '85px'}}>\n                           <IconButton onClick = {handleFunnyClick}>\n                              <InsertEmoticonIcon color = {votedOn.funny.find(id => id === hint.id) ? 'primary' : 'action'}/>\n                           </IconButton>\n                           <Typography variant = 'button' display = 'inline'>{hint.funny}</Typography>\n                           <IconButton onClick = {handleHelpfulClick}>\n                              <ThumbUpAltOutlinedIcon color = {votedOn.helpful.find(id => id === hint.id) ? 'primary' : 'action'}/>\n                           </IconButton>\n                           <Typography variant = 'button' display = 'inline'>{hint.helpful}</Typography>\n                        </div>\n                        <div style = {{display: 'inline', marginLeft: '-5px'}}>\n                           <IconButton onClick = {handleOpenSubmission}>\n                              <ReportOutlinedIcon color = 'error'/>\n                           </IconButton>\n                        </div>\n                     </Grid>\n                  </Grid>\n               </Grid>\n            </Grid>\n         </Paper>\n      </>\n   )\n})\n\nexport default HintCard","import React, { useState, useEffect } from 'react';\nimport { withFirebase } from '../firebase';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Modal from '@material-ui/core/Modal'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField' // STYLES IMPORTED... LEAVE HERE\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\nimport CardSearchbar from '../input/CardSearchbar'\nimport CategoryButtons from '../input/CategoryButtons'\nimport SortButtons from '../input/SortButtons'\nimport TypeButtons from '../input/TypeButtons'\nimport HintSubmissionForm from '../forms/HintSubmissionForm';\nimport HintCard from '../HintCard'\n\nimport hintService from '../../services/hints'\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n      flexGrow: 1,\n      minWidth: '100%',\n      padding: '0',\n      margin: '0 0 0 0'\n   },\n   gridItem: {\n      margin: '0.5em 0.5em',\n      textAlign: 'center',\n      overflowWrap: 'hyphens'\n   },\n   searchbar: {\n      marginTop: '1em',\n      padding: '0',\n      minWidth: '100%',\n      maxHeight: '790px'\n   },\n   submitButton: {\n      height: '50px'\n   },\n   submissionModal: {\n      height: '85%',\n      width: '85%',\n      margin: 'auto',\n   },\n   submissionModalPaper: {\n      padding: '3em'\n   },\n   buttonGroup: {\n      margin: '0 1.5em',\n      marginBottom: '1em'\n   },\n   paper: {\n      height: '250px',\n      width: '460px'\n   },\n   cardImage: {\n      height: '250px'\n   }\n}))\n\nconst Home = ({firebase}) => {\n   const [hints, setHints] = useState([])\n   const [category, setCategory] = useState('all')\n   const [sort, setSort] = useState('popular')\n   const [type, setType] = useState('hints')\n   const [search, setSearch] = useState('')\n   const [searchItem, setSearchItem] = useState('')\n   const [openSubmission, setOpenSubmission] = useState(false)\n\n   useEffect(() => {\n      hintService\n         .get()\n         .then(initialHints => setHints(initialHints))\n   }, [])\n\n   const classes = useStyles()\n\n   const changedFilter = (filterParam, filterParamArg) => {\n      let filterParams = {\n         cardName: searchItem ? searchItem.name : '',\n         sortCat: category,\n         sortBy: sort,\n         type: type,\n\n      }\n      filterParams[filterParam] = filterParamArg\n\n      hintService\n         .get(filterParams)\n         .then(hints => setHints(hints))\n   }\n\n   const handleCategoryChange = (event, newCategory) => {setCategory(newCategory); changedFilter('sortCat', newCategory)}\n   const handleSortChange = (event, newSort) => {setSort(newSort); changedFilter('sortBy', newSort)}\n   const handleTypeChange = (event, newType) => {setType(newType); changedFilter('type', newType)}\n   const handleSearchbarChange = (event, newSearch) => {setSearch(newSearch); changedFilter();}\n   const handleSearchItemChange = (event, newSearchItem) => {setSearchItem(newSearchItem); changedFilter('cardName', newSearchItem ? newSearchItem.name : '')}\n   const handleOpenSubmission = () => setOpenSubmission(true)\n   const handleCloseSubmission = () => setOpenSubmission(false)\n\n   const getHintCards = () => {\n      return hints.map(hint => {\n         return (\n            <Grid item key = {hint.id} className = {classes.gridItem}>\n               <HintCard hint = {hint}/>\n            </Grid>\n         )\n      })\n   }\n\n   return (\n      <Container component = 'div' className = {classes.root} spacing = {0}>\n         <Modal\n            open = {openSubmission}\n            onClose = {handleCloseSubmission}\n            onEscapeKeyDown = {handleCloseSubmission}\n            onBackdropClick = {handleCloseSubmission}\n            className = {classes.submissionModal}\n         >\n            <Paper className = {classes.submissionModalPaper}>\n               <HintSubmissionForm handleCloseSubmission = {handleCloseSubmission}/>\n            </Paper>\n         </Modal>\n\n         <Grid container direction = 'column' justify = 'center'>\n            <Grid item className = {classes.gridItem} style = {{height: '75px'}}>\n               <Grid container spacing = {1} justify = 'center' alignItems = 'center'>\n                  <Grid item sm = {9} className = {classes.gridItem}>\n                     <CardSearchbar\n                        className = {classes.searchbar}\n                        inputValue = {search}\n                        onInputChange = {handleSearchbarChange}\n                        input = {searchItem}\n                        onChange = {handleSearchItemChange}\n                     />\n                  </Grid>\n                  <Grid item className = {classes.gridItem}>\n                     <Button onClick = {handleOpenSubmission} variant = 'contained' color = 'secondary' className = {classes.submitButton}>\n                        <Typography variant = 'button'>\n                           Submit a Hint\n                        </Typography>\n                     </Button>\n\n                  </Grid>\n               </Grid>\n            </Grid>\n            <Grid item className = {classes.gridItem}>\n               <CategoryButtons category = {category} handleCategoryChange = {handleCategoryChange}/>\n               <SortButtons sort = {sort} handleSortChange = {handleSortChange}/>\n               <TypeButtons type = {type} handleTypeChange = {handleTypeChange}/>\n            </Grid>\n         </Grid>\n         <Grid container justify = 'center'>\n            {getHintCards()}\n         </Grid>\n      </Container>\n   )\n}\n\nexport default withFirebase(Home)\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../firebase';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Fab from '@material-ui/core/Fab'\n\nimport hintService from '../../services/hints'\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n   },\n   formItem: {\n      margin: '1.2em auto',\n      maxWidth: '90%'\n   },\n   submitButton: {\n      margin: '1.2em auto',\n      width: '20%'\n   },\n}))\n\nconst LoginForm = ({firebase, history}) => {\n   const [email, setEmail] = useState('')\n   const [password, setPassword] = useState('')\n   const [formError, setFormError] = useState(null)\n   const classes = useStyles()\n\n   const onEmailChange = event => {\n      event.preventDefault()\n      setEmail(event.target.value)\n   }\n\n   const onPasswordChange = event => {\n      event.preventDefault()\n      setPassword(event.target.value)\n   }\n\n   const onFormSubmit = event => {\n      event.preventDefault()\n      console.log('Logging in...')\n      firebase\n         .signInWithEmailAndPassword(email, password)\n         .then(() => {\n            hintService.updateToken(firebase)\n            setEmail('')\n            setPassword('')\n            setFormError(null)\n            history.push('/')\n            console.log('Successfully logged in!')\n         })\n         .catch(error => {\n            setFormError(error)\n            console.error('Could not authenticate', error)\n         })\n   }\n\n   const errorMessage = formError ? formError.message : ''\n\n   return (\n      <div>\n         <TextField\n            id = \"outlined-full-width\"\n            label = \"Email\"\n            placeholder = \"\"\n            helperText=\"\"\n            fullWidth\n            autoFocus\n            margin=\"normal\"\n            InputLabelProps={{\n               shrink: true,\n            }}\n            error = {formError}\n            className = {classes.formItem}\n            variant=\"outlined\"\n            type = 'email'\n            value = {email}\n            onChange = {onEmailChange}\n         />\n         <TextField\n            id = \"outlined-full-width\"\n            label = \"Password\"\n            placeholder = \"\"\n            helperText=\"\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n               shrink: true,\n            }}\n            error = {formError}\n            helperText = {errorMessage}\n            className = {classes.formItem}\n            variant=\"outlined\"\n            type = 'password'\n            value = {password}\n            onChange = {onPasswordChange}\n         />\n         <Fab \n            type = 'submit' \n            variant = 'extended' \n            color = 'primary' \n            className = {classes.submitButton}\n            onClick = {onFormSubmit}\n         >\n            <Typography variant = 'button'>LOGIN</Typography>\n         </Fab>\n      </div>\n   )\n}\n\nexport default withFirebase(withRouter(LoginForm))","import React, { useState, useEffect } from 'react';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport LoginForm from '../forms/LoginForm'\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n      margin: 'auto',\n      marginTop: '2em',\n      width: '50%',\n      minWidth: '500px'\n   },\n   grid: {\n      width: '100%',\n      margin: 'auto',\n      textAlign: 'center'\n   }\n}))\n\nconst LoginPage = () => {\n   const classes = useStyles()\n   return (\n      <Paper elevation = {3} className = {classes.root}>\n      <Grid container direction = 'column' justify = 'center' alignContent = 'center' alignItems = 'center' spacing = {3} className = {classes.grid}>\n         <Grid item sm = {12}>\n            <Typography variant = 'h3'>Sign In</Typography>\n         </Grid>\n         <Grid item >\n            <LoginForm />\n         </Grid>\n      </Grid>\n      </Paper>\n   )\n}\n\nexport default LoginPage;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../firebase';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Fab from '@material-ui/core/Fab'\n\nimport hintService from '../../services/hints'\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n   },\n   formItem: {\n      margin: '1.2em auto',\n      maxWidth: '90%'\n   },\n   submitButton: {\n      margin: '1.2em auto',\n      width: '20%'\n   },\n}))\n\nconst SignupForm = ({firebase, history}) => {\n   const [email, setEmail] = useState('')\n   const [username, setUsername] = useState('')\n   const [password, setPassword] = useState('')\n   const [confirmPassword, setConfirmPassword] = useState('')\n   const [formError, setFormError] = useState(null)\n   const classes = useStyles()\n\n   const onEmailChange = event => {\n      event.preventDefault()\n      setEmail(event.target.value)\n   }\n\n   const onUsernameChange = event => {\n      event.preventDefault()\n      setUsername(event.target.value)\n   }\n\n   const onPasswordChange = event => {\n      event.preventDefault()\n      setPassword(event.target.value)\n   }\n\n   const onConfirmPasswordChange = event => {\n      event.preventDefault()\n      setConfirmPassword(event.target.value)\n   }\n\n   const onFormSubmit = event => {\n      event.preventDefault()\n\n      console.log('Signing up...')\n      firebase\n         .createUserWithEmailAndPassword(email, password)\n         .then(authUser => {\n            authUser.user.updateProfile({\n               displayName: username\n            })\n            hintService.updateToken(firebase)\n            setEmail('')\n            setUsername('')\n            setPassword('')\n            setConfirmPassword('')\n            console.log('Successfully signed up!')\n            history.push('/')\n         })\n         .catch(error => {\n            setFormError(error)\n            console.error('Could not sign up', error)\n         })\n   };\n\n   const invalidForm =\n      password !== confirmPassword ||\n      password === '' ||\n      email === '' ||\n      username === '';\n\n   const errorMessage = \n      formError ? formError.message : \n      (password !== confirmPassword && confirmPassword) ? 'Passwords do not match' : ''\n\n   return (\n      <div>\n         <TextField\n            id = \"outlined-full-width\"\n            label = \"Email\"\n            placeholder = \"\"\n            helperText=\"\"\n            fullWidth\n            autoFocus\n            margin=\"normal\"\n            InputLabelProps={{\n               shrink: true,\n            }}\n            error = {formError}\n            className = {classes.formItem}\n            variant=\"outlined\"\n            type = 'email'\n            value = {email}\n            onChange = {onEmailChange}\n         />\n         <TextField\n            id = \"outlined-full-width\"\n            label = \"Username\"\n            placeholder = \"\"\n            helperText=\"This will be visible to everyone else, please be respectful!\"\n            fullWidth\n            autoFocus\n            margin=\"normal\"\n            InputLabelProps={{\n               shrink: true,\n            }}\n            error = {formError}\n            className = {classes.formItem}\n            variant=\"outlined\"\n            type = 'email'\n            value = {username}\n            onChange = {onUsernameChange}\n         />\n         <TextField\n            id = \"outlined-full-width\"\n            label = \"Password\"\n            placeholder = \"\"\n            helperText=\"\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n               shrink: true,\n            }}\n            error = {formError}\n            className = {classes.formItem}\n            variant=\"outlined\"\n            type = 'password'\n            value = {password}\n            onChange = {onPasswordChange}\n         />\n         <TextField\n            id = \"outlined-full-width\"\n            label = \"Confirm Password\"\n            placeholder = \"\"\n            helperText=\"\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n               shrink: true,\n            }}\n            error = {formError || (errorMessage ? true : false)}\n            helperText = {errorMessage}\n            className = {classes.formItem}\n            variant=\"outlined\"\n            type = 'password'\n            value = {confirmPassword}\n            onChange = {onConfirmPasswordChange}\n         />\n         <Fab \n            type = 'submit' \n            variant = 'extended'\n            color = 'primary' \n            className = {classes.submitButton}\n            disabled = {invalidForm}\n            onClick = {onFormSubmit}\n         >\n            <Typography variant = 'button'>SIGNUP</Typography>\n         </Fab>\n      </div>\n   )\n}\n\nexport default withFirebase(withRouter(SignupForm))","import React, { useState, useEffect } from 'react';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport SignupForm from '../forms/SignupForm'\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n      margin: 'auto',\n      marginTop: '2em',\n      width: '50%',\n      minWidth: '500px'\n   },\n   grid: {\n      width: '100%',\n      margin: 'auto',\n      textAlign: 'center'\n   }\n}))\n\nconst SignupPage = () => {\n   const classes = useStyles()\n   return (\n      <Paper elevation = {3} className = {classes.root}>\n      <Grid container direction = 'column' justify = 'center' alignContent = 'center' alignItems = 'center' spacing = {3} className = {classes.grid}>\n         <Grid item>\n            <Typography variant = 'h3'>Sign Up</Typography>\n         </Grid>\n         <Grid item >\n            <SignupForm />\n         </Grid>\n      </Grid>\n      </Paper>\n   )\n}\n\nexport default SignupPage;","import React from 'react'\nimport {withRouter, BrowserRouter as Router, Link as RouterLink} from 'react-router-dom'\nimport {withFirebase} from './firebase'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\n\nconst HomeLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />)\nconst LoginLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />)\nconst SignupLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />)\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n      flexGrow: 1,\n      background: '#ebc600',\n      padding: '1em',\n      margin: '0',\n   },\n   title: {\n      textAlign: 'left',\n      marginLeft: '1.5em'\n   },\n   captionText: {\n      marginRight: '0.25em',\n      marginLeft: '0.55em',\n   },\n   buttons: {\n      position: 'absolute',\n      right: '2em',\n      top: '1.8em',\n   }\n}))\n\nconst NavigationBar = ({firebase, userAuth}) => {\n   const classes = useStyles()\n\n   const loginButtons = () => {\n      if (!userAuth) {\n         return (\n            <>\n               <Button \n                  variant = 'contained' size = 'medium' color = 'primary' \n                  component = {LoginLink} to = '/login'>\n                  <Typography variant = 'button'>Sign In</Typography>\n               </Button>\n               <Typography variant = 'caption' className = {classes.captionText}> or </Typography>\n               <Button \n                  variant = 'text'\n                  component = {SignupLink} to = '/signup'>\n                  <Typography variant = 'button'>Sign Up</Typography>\n               </Button>\n            </>\n         )\n      } else {\n         return (\n            <div>\n               <Button variant = 'outlined' size = 'medium' color = 'primary'>\n                  <Typography variant = 'button'>\n                     Hi, <strong>{firebase.auth.currentUser.displayName}</strong>!\n                  </Typography>\n               </Button>\n               <Button variant = 'text' style = {{color: 'black'}}>\n                  <Typography variant = 'button' onClick={firebase.signOut}>Sign Out</Typography>\n               </Button>\n            </div>\n         )\n      }\n   }\n\n   return (\n      <Container className = {classes.root} maxWidth = {false}>\n         <Grid container style = {{position: 'relative'}}>\n            <Grid item sm = {8} className = {classes.title}>\n                  <Typography variant = 'h1' component = {HomeLink} to = '/'>\n                     Hawkshot\n                  </Typography>\n            </Grid>\n            <Grid item className = {classes.buttons}>\n               {loginButtons()}\n            </Grid>\n         </Grid>\n      </Container>\n   )\n}\n\nexport default withFirebase(withRouter(NavigationBar))","import React, { useState, useEffect } from 'react';\nimport { withFirebase } from './components/firebase';\n\nimport {\n   BrowserRouter as Router,\n   Route,\n} from 'react-router-dom'\n\nimport Home from './components/pages/Home'\nimport LoginPage from './components/pages/Login'\nimport SignupPage from './components/pages/SignUp'\nimport NavigationBar from './components/NavigationBar.js'\n\nimport hintService from './services/hints'\n\n\nconst App = ({firebase}) => {\n   const [userAuth, setUserAuth] = useState(null)\n\n   useEffect(() => {\n      firebase.auth.onAuthStateChanged(user => {\n         user ? setUserAuth(user) : setUserAuth(null)\n         hintService.updateToken(firebase)\n      })    \n   }, [])\n\n   return (\n      <>\n         <Router>\n            <NavigationBar userAuth = {userAuth}/>\n            <Route exact path = '/' render = {() => <Home/>} />\n            <Route exact path = '/login' render = {() => <LoginPage/>} />\n            <Route exact path = '/signup' render = {() => <SignupPage/>} />\n         </Router>\n      </>\n   )\n}\n\nexport default withFirebase(App);\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme'\n\nconst MuiTheme = createMuiTheme({\n   palette : {\n      type: 'dark'\n   },\n   typography: {\n      fontFamily: [\n         'Roboto',\n         '\"Lato\"',\n         'sans-serif'\n     ].join(','),\n      h1: {\n         fontSize: '6em',\n         textDecoration: 'none',\n         textColor: 'black',\n         '&:visited': {\n            color: 'black'\n         }\n      },\n      body2: {\n         color: 'grey'\n      }\n   }\n})\n\nexport default MuiTheme","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport ThemeProvider from '@material-ui/styles/ThemeProvider'\n\nimport App from './App';\nimport Firebase, { FirebaseContext } from './components/firebase';\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport MuiTheme from './MuiTheme'\n\nReactDOM.render(\n   <ThemeProvider theme = {MuiTheme}>\n     <FirebaseContext.Provider value={new Firebase()}>\n         <CssBaseline>\n            <App/>\n         </CssBaseline>\n     </FirebaseContext.Provider>\n   </ThemeProvider>,\n\n   document.getElementById('root')\n);\n"],"sourceRoot":""}